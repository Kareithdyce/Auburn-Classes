Microsoft (R) Macro Assembler Version 14.24.28316.0	    02/05/20 12:59:49
Number4.asm						     Page 1 - 1


				; AddTwo.asm - adds two 32-bit integers.
				; Chapter 3 example

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
 00000000 11 22 33 44		myBytes	BYTE	11h, 22h, 33h, 44h
 00000004 1234 5678 ABCD	myWords	WORD	1234h, 5678h, 0ABCDh, 0EF01h, 2345h
	   EF01 2345
 0000000E 0000AB23		myDoubles	DWORD	0AB23h, 0BC34h, 0CD54h, 8967h, 6F6Ah
	   0000BC34
	   0000CD54
	   00008967
	   00006F6A
 00000022 0000000E R		myPointer	DWORD	myDoubles
 00000026 FF FE FD FC		var1 SBYTE	-1, -2, -3, -4
 0000002A 1000 2000 3000	var2 WORD		1000h, 2000h, 3000h, 4000h
	   4000
 00000032 FFEB FFD6		var3 SWORD	-21, -42
 00000036 000010A0		var4 DWORD	10A0h, 20B0h, 30C0h, 40D0h
	   000020B0
	   000030C0
	   000040D0




 00000000			.code
 00000000			main proc
				;mov esi, OFFSET myBytes					
				;mov ax, WORD PTR [esi+2]		; A.	AX = 4433h		
				;mov eax, DWORD PTR myWords		; B.	EAX = 56781234h 		
				;mov esi, myPointer
				;mov eax, 0
				;mov ax, WORD PTR [esi+3]		; C.	AX = CD54h

				;mov ax, WORD PTR [esi+1]		; D.	AX = 00ABh 		
				;mov ax, WORD PTR [esi-6]		; E.	AX = ABCDh		

				;mov ax, TYPE  myDoubles
 00000000  B8 00000000		mov eax, 0
 00000005  66| A1		mov ax, var2				; AX = 1000h 
	   0000002A R
 0000000B  66| A1		mov ax, [var2 + 1]	
	   0000002B R
 00000011  66| A1		mov ax, [var2 + 2]
	   0000002C R
 00000017  66| A1		mov ax, [var2 + 3]
	   0000002D R
 0000001D  66| A1		mov ax, [var2 + 4]			; AX = 3000h
	   0000002E R
 00000023  66| A1		mov ax, var3				; AX = -21
	   00000032 R
 00000029  66| A1		mov ax, [var3-2]			; AX = 4000h
	   00000030 R


				invoke ExitProcess,0
 0000002F  6A 00	   *	    push   +000000000h
 00000031  E8 00000000 E   *	    call   ExitProcess
 00000036			main endp
				end main
Microsoft (R) Macro Assembler Version 14.24.28316.0	    02/05/20 12:59:49
Number4.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000046 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000036 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000036 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000022 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	
var1 . . . . . . . . . . . . . .	Byte	 00000026 _DATA	
var2 . . . . . . . . . . . . . .	Word	 0000002A _DATA	
var3 . . . . . . . . . . . . . .	Word	 00000032 _DATA	
var4 . . . . . . . . . . . . . .	DWord	 00000036 _DATA	

	   0 Warnings
	   0 Errors
